/*
  Helper script that takes an XHTML file generated by the Railroad Generator
  as input and that converts its contents to an HTML fragment to be included
  in the final Chunks and Rules specification.

  Francois Daoust <fd@w3.org>
  
  Released under the CC0 license (public domain):
  https://creativecommons.org/publicdomain/zero/1.0/

  Usage:
    node rr-html2html.js rr.xhtml > rr.html
*/

const jsdom = require('jsdom');
const { JSDOM } = jsdom;

/*
  Main conversion function

  Notes:
  - The only SVG elements we're interested in are directly under the <body> tag
  - The function grossly converts the XHTML to HTML by getting rid of namespaces
  - The function adjusts identifiers to make sure they won't collide with other
  identifiers used in the specifications.
*/
async function convert(xhtml) {
  const dom = await JSDOM.fromFile(xhtml);
  return '<dl>\n' +
    [...dom.window.document.querySelectorAll('body > svg')]
      .map(svg => {

        const token = svg.previousSibling.firstChild.getAttribute('name');
        const cleanSvg = svg.outerHTML
          .replace(/ xmlns[^=]*="[^"]+"/g, '')
          .replace(/svg:/g, '')
          .replace(/xlink:/g, '')
          .replace(/href="#([^"]*)"/g, "href=\"#rr-$1\"");

        return `<dt id="rr-${token}">${token}</dt>\n<dd class="railroad">${cleanSvg}</dd>`;
      })
      .join('\n\n') +
    '\n</dl>';
}


const xhtmlFile = process.argv[2];

convert(xhtmlFile)
  .then(html => {
    console.log(html);
    process.exit(0);
  })

  .catch(err => {
    console.error(err);
    process.exit(1);
  });
